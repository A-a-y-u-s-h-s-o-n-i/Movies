{"version":3,"sources":["components/movies/searchBox.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/table/tableHeader.jsx","components/table/tableBody.jsx","components/table/table.jsx","components/movies/moviesTable.jsx","components/movies/movies.jsx","utils/paginate.js","components/customers/customer.jsx","components/rentals/rentals.jsx","components/common/notFound.jsx","components/navbar/navBar.jsx","components/login/input.jsx","components/movies/select.jsx","components/login/form.jsx","components/movies/moviesForm.jsx","components/login/loginForm.jsx","components/login/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBox","value","onChange","type","name","placeholder","className","e","currentTarget","genres","_id","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","map","page","key","onClick","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","Like","classes","liked","aria-hidden","onLike","style","cursor","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","get","createKey","data","Table","MoviesTable","movie","to","onDelete","Movies","state","searchQuery","onDeleteHandler","m","setState","handleLike","index","indexOf","handlePageChange","handleGenresSelect","selectedGenre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","fontSize","marginBottom","Customer","Rental","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Input","error","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleChange","input","errorMessage","handleSubmit","preventDefault","doSubmit","disabled","MoviesForm","genreId","string","required","min","max","movieInDb","find","genresAPI","Date","now","push","saveMovie","history","movieId","match","params","replace","mapToViewModel","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","password","console","log","RegisterForm","email","App","Fragment","component","from","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3453b092.chunk.js","sourcesContent":["import React from 'react' ;\r\n\r\nconst SearchBox = ({value,onChange}) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            placeholder=\"Search...\"\r\n            className=\"form-control m-3\"\r\n            value={value}\r\n            onChange={e=> onChange(e.currentTarget.value)}\r\n        />\r\n    )\r\n};\r\n\r\nexport default SearchBox;","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n    const { itemsCount , pageSize, onPageChange, currentPage} = props;\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount === 1) return null;\r\n    const pages = _.range(1,pagesCount +1);\r\n\r\n    return(\r\n    <div className=\"text-center\">\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page => (\r\n                    <li key={ page } className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                        <button className=\"page-link\" onClick={()=> onPageChange(page)}>{ page }</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    </div>)\r\n};\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired ,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = props => {\r\n\r\n    const {items,textProperty,valueProperty,selectedItem,onItemSelect} = props;\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map(item=>(\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    onClick={()=> onItemSelect(item)}\r\n                    className={item === selectedItem ? \"list-group-item active\": \"list-group-item\" }\r\n                >\r\n                    {item[textProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nListGroup.defaultProps = {\r\n    textProperty:'name',\r\n    valueProperty:'_id'\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n    let classes=\"fa fa-heart\";\r\n    if (!props.liked) classes+= \"-o\";\r\n    return (\r\n        <i\r\n            className={classes}\r\n            aria-hidden=\"true\"\r\n            onClick={props.onLike}\r\n            style={{cursor:'pointer'}}\r\n        />\r\n    );\r\n};\r\n \r\nexport default Like;\r\n","import React, {Component} from \"react\";\r\n\r\nclass TableHeader extends Component{\r\n\r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn};\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n        }else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n        this.props.onSort(sortColumn)\r\n    };\r\n\r\n\r\n    renderSortIcon = column => {\r\n        const { sortColumn } = this.props;\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"/>;\r\n        return <i className=\"fa fa-sort-desc\"/>\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map(column => (\r\n                        <th className=\"clickable\"\r\n                            key={column.path || column.key}\r\n                            onClick={()=> this.raiseSort(column.path)}\r\n                        >\r\n                            {column.label}<span className=\"m-2 text-center\">{this.renderSortIcon(column)}</span>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, {Component} from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n\r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item);\r\n\r\n        return _.get(item, column.path);\r\n    };\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key);\r\n    };\r\n\r\n    render() {\r\n        const { data, columns } = this.props;\r\n\r\n        return (\r\n            <tbody>\r\n            {data.map(item => (\r\n                <tr key={item._id}>\r\n                    {columns.map(column => (\r\n                        <td key={this.createKey(item, column)}>\r\n                            {this.renderCell(item, column)}\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({columns,sortColumn,onSort,data}) => {\r\n\r\n    return (\r\n        <table className=\"table table-borderless\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n            <TableBody\r\n                data={data}\r\n                columns={columns}\r\n            />\r\n        </table>\r\n    )\r\n};\r\n\r\nexport default Table;\r\n","import React, {Component} from \"react\";\r\nimport Like from \"../common/like\";\r\nimport Table from \"../table/table\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component{\r\n    columns = [\r\n        { path: \"title\",\r\n            label: \"Title\",\r\n            content: movie=> (<Link to={`/movies/${movie._id}`}>{movie.title}</Link>)\r\n        },\r\n        { path: \"genre.name\", label: \"Genre\" },\r\n        { path: \"numberInStock\", label: \"Stock\" },\r\n        { path: \"dailyRentalRate\", label: \"Rate\" },\r\n        {\r\n            key: \"like\",\r\n            content: movie => (\r\n                <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n            )\r\n        },\r\n        {\r\n            key: \"delete\",\r\n            content: movie => (\r\n                <button\r\n                    onClick={() => this.props.onDelete(movie)}\r\n                    className=\"btn btn-danger btn-sm\"\r\n                >\r\n                    Delete\r\n                </button>\r\n            )\r\n        }\r\n    ];\r\n\r\n    render() {\r\n        const {movies,sortColumn,onSort} = this.props;\r\n\r\n        return (\r\n            <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import SearchBox from \"./searchBox\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport {getMovies} from \"../../services/fakeMovieService\";\r\nimport Pagination from \"../common/pagination\";\r\nimport {paginate} from \"../../utils/paginate\";\r\nimport ListGroup from \"../common/listGroup\";\r\nimport {getGenres} from \"../../services/fakeGenreService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Movies extends Component{\r\n\r\n    //STATE\r\n    state = {\r\n        movies: [],\r\n        genres:[],\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        searchQuery:\"\",\r\n        sortColumn:{path:'title',order:'asc'}\r\n    };\r\n\r\n    //COMPONENT_DID_MOUNT\r\n    componentDidMount() {\r\n        const genres = [{_id:'',name:'All Genres'},...getGenres()];\r\n        this.setState({movies:getMovies(),genres})\r\n    }\r\n\r\n    //HANDLE_DELETE_FUNCTION\r\n    onDeleteHandler = (movie) => {\r\n        const movies = this.state.movies.filter(m => m._id!==movie._id);\r\n        this.setState({movies});\r\n    };\r\n\r\n    //HANDLE_LIKE_FUNCTION\r\n    handleLike = (movie) =>{\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({movies});\r\n    };\r\n\r\n    //HANDLE_PAGE_CHANGE_FUNCTION\r\n    handlePageChange = page =>{\r\n        this.setState({currentPage:page})\r\n    };\r\n\r\n    //HANDLE_SELECT_GENRES_FUNCTION\r\n    handleGenresSelect = genre => {\r\n        this.setState({selectedGenre: genre,currentPage:1})\r\n    };\r\n\r\n    //HANDLE_SEARCH_FUNCTION\r\n    handleSearch = query => {\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n    };\r\n\r\n    //HANDLE_SORT_FUNCTION\r\n    handleSort = sortColumn => {\r\n        this.setState({sortColumn})\r\n    };\r\n\r\n    //PAGE_DATA\r\n    getPageData = () => {\r\n        const {pageSize,currentPage,selectedGenre,searchQuery,movies:allMovies,sortColumn} = this.state;\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n            filtered = allMovies.filter(m =>\r\n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n        const sorted = _.orderBy(filtered,[sortColumn.path],[sortColumn.order]);\r\n        const movies = paginate(sorted,currentPage,pageSize);\r\n\r\n        return {totalCount:filtered.length,data:movies};\r\n    };\r\n\r\n    //RENDER_ALL_COMPONENTS_AND_FUNCTION\r\n    render() {\r\n\r\n        //DEFINE_ALL_CONSTANTS\r\n        const {length: count} = this.state.movies;\r\n        const {pageSize,currentPage,sortColumn,searchQuery} = this.state;\r\n        const {totalCount,data:movies} = this.getPageData();\r\n\r\n        //RETURN_FUNCTION\r\n        return (count === 0 ? <p className=\"text-white badge badge-primary text-wrap p-2 m-2\" style={{fontSize:20}}>There are No Movies in the Database</p> : (\r\n            <div className=\"row\">\r\n\r\n                {/*LIST_GROUP_GENRES*/}\r\n                <div className=\"col-sm-3\">\r\n                    <ListGroup\r\n                        items={this.state.genres}\r\n                        selectedItem={this.state.selectedGenre}\r\n                        onItemSelect={this.handleGenresSelect}\r\n                    />\r\n                </div>\r\n\r\n                {/*LIST_OF_MOVIES*/}\r\n                <div className=\"col-sm-9\">\r\n                    <Link\r\n                        style={{marginBottom:20}}\r\n                        to=\"/movies/new\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        New Movies\r\n                    </Link>\r\n\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch}/>;\r\n\r\n                    <p\r\n                        className=\"text-black\"\r\n                        style={{fontSize:20}}\r\n                    >\r\n                        Showing {totalCount} Movies in Database\r\n                    </p>\r\n\r\n                    {/*MOVIES_TABLE*/}\r\n                    <MoviesTable\r\n                        movies={movies}\r\n                        sortColumn={sortColumn}\r\n                        onLike={this.handleLike}\r\n                        onDelete={this.onDeleteHandler}\r\n                        onSort={this.handleSort}\r\n                    />\r\n\r\n                    {/*PAGINATION*/}\r\n                    <Pagination\r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        ));\r\n    }\r\n}\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Customer = () => {\r\n  return <h1>Customers</h1>\r\n};\r\n\r\nexport default Customer;\r\n","import React from 'react';\r\n\r\nconst Rental = () => {\r\n    return <h1>Rentals</h1>\r\n};\r\n\r\nexport default Rental;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <h1>Not Found</h1>\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { NavLink,Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">MyMovies</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/customer\">Customers</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/rental\">Rentals</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Input = ({name,label,error,...rest}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                {...rest}\r\n                name={name}\r\n                id={name}\r\n                className=\"form-control\"\r\n                placeholder={name}\r\n            />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({name,label,options,error,...rest}) => {\r\n    return(\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\"/>\r\n                {options.map(option=> (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"../movies/select\";\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        errors:{}\r\n    };\r\n\r\n    validate = () => {\r\n        const options = {abortEarly: false};\r\n        const {error} = Joi.validate(this.state.data,this.schema, options);\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    };\r\n\r\n    validateProperty = ({name,value}) => {\r\n        const obj = {[name]:value};\r\n        const schema = {[name]: this.schema[name]};\r\n        const {error} = Joi.validate(obj,schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleChange = ({currentTarget: input}) => {\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = {...this.state.data};\r\n        data[input.name] = input.value;\r\n        this.setState({data,errors});\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({errors:errors || {}});\r\n        if (errors) return;\r\n        this.doSubmit();\r\n    };\r\n\r\n    renderButton(label) {\r\n        return (\r\n            <button\r\n                disabled={this.validate()}\r\n                className=\"btn btn-primary\"\r\n            >\r\n                {label}\r\n            </button>\r\n        )\r\n    }\r\n\r\n    renderInput(name, label, type='text') {\r\n        const {data,errors} = this.state;\r\n        return (\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                label={label}\r\n                value={data[name]}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Select\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"../login/form\";\r\nimport { getMovie, saveMovie } from \"../../services/fakeMovieService\";\r\nimport { getGenres } from \"../../services/fakeGenreService\";\r\n\r\nclass MoviesForm extends Form{\r\n    state = {\r\n        data:{\r\n            title:\"\",\r\n            genreId:\"\",\r\n            numberInStock:\"\",\r\n            dailyRentalRate:\"\"\r\n        },\r\n        genres:[],\r\n        errors:{}\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string().required().label(\"Title\"),\r\n        genreId: Joi.string().required().label(\"Genre\"),\r\n        numberInStock: Joi.string().min(0).max(100).required().label(\"Number In Stock\"),\r\n        dailyRentalRate: Joi.string().min(0).max(10).required().label(\"Daily Rental Rate\")\r\n    };\r\n\r\n    componentDidMount() {\r\n        const genres = getGenres();\r\n        this.setState({ genres });\r\n\r\n        const movieId = this.props.match.params.id;\r\n        if (movieId === \"new\") return;\r\n\r\n        const movie = getMovie(movieId);\r\n        if (!movie) return this.props.history.replace(\"/not-found\");\r\n\r\n        this.setState({ data: this.mapToViewModel(movie) });\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = () => {\r\n        saveMovie(this.state.data);\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesForm;\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from \"./form\";\r\n\r\nclass LoginForm extends Form {\r\n\r\n    state = {\r\n        data: { username:\"\", password:\"\"},\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().required().label(\"Username\"),\r\n        password: Joi.string().required().label(\"Password\")\r\n    };\r\n\r\n    doSubmit = () => {\r\n        console.log(\"Submitted\")\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-6 ml-auto mr-auto\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            {this.renderInput(\"username\",\"Username\")}\r\n                            {this.renderInput(\"password\",\"Password\",\"password\")}\r\n                            {this.renderButton(\"Login\")}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Form from \"./form\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass RegisterForm extends Form {\r\n\r\n    state = {\r\n        data: { name:\"\",username:\"\", password:\"\"},\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        name:Joi.string().required().label(\"Name\"),\r\n        username: Joi.string().required().email().label(\"Username\"),\r\n        password: Joi.string().required().min(5).max(15).label(\"Password\")\r\n    };\r\n\r\n    doSubmit = () => {\r\n        console.log(\"Submitted\")\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Register</h1>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm-6 ml-auto mr-auto\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            {this.renderInput(\"name\",\"Name\")}\r\n                            {this.renderInput(\"username\",\"Username\")}\r\n                            {this.renderInput(\"password\",\"Password\",\"password\")}\r\n                            {this.renderButton(\"Register\")}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React,{Component} from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Movies from \"./components/movies/movies\";\r\nimport Customer from \"./components/customers/customer\";\r\nimport Rental from \"./components/rentals/rentals\";\r\nimport NotFound from \"./components/common/notFound\";\r\nimport NavBar from \"./components/navbar/navBar\";\r\nimport MoviesForm from \"./components/movies/moviesForm\";\r\nimport LoginForm from \"./components/login/loginForm\";\r\nimport RegisterForm from \"./components/login/registerForm\";\r\n\r\nclass App extends Component{\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <NavBar/>\r\n                <main className=\"container mt-3 text-center\">\r\n                    <Switch>\r\n                        <Route path=\"/movies/:id\" component={MoviesForm}/>\r\n                        <Route path=\"/movies\" component={Movies}/>\r\n                        <Route path=\"/customer\" component={Customer}/>\r\n                        <Route path=\"/rentals\" component={Rental}/>\r\n                        <Route path=\"/login\" component={LoginForm}/>\r\n                        <Route path=\"/register\" component={RegisterForm}/>\r\n                        <Route path=\"/not-found\" component={NotFound}/>\r\n                        <Redirect from=\"/\" exact to=\"/movies\"/>\r\n                        <Redirect to=\"/not-found\"/>\r\n                    </Switch>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'jquery/dist/jquery';\nimport App from './App.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}